@use "../../../css/_variables.scss" as *;

@use "../../../css/_mixins.scss" as *;


.javascript-controller {


    .fill-absolute {
        overflow: hidden;
        overflow-y: auto;
        overflow-x: auto;
    }

}




.data-request-controller {
    background-color: $c-primary;

    .data-request-grid {
        display: grid; 
        grid-auto-flow: row;
        grid-template-columns: 1fr;
        grid-template-rows: min-content 60px auto;

        .request-input {
            background-color: transparent;
            color: $t-primary;
            padding-left: $padding-elem;
            padding-right: $padding-elem;
            font-size: map-get($map:$text-size  , $key: "subhead" );
            font-weight: map-get($map:$text-weight  , $key: "regular" );
        }



        .params {
            position: relative;
        }

        .input-holder {
            position: absolute;
            top: $padding-layout;
            bottom: $padding-elem;
            right: $padding-elem;
            left: $padding-elem;
        }

        .input-grid {
            position: relative;
            height: 100%;
            width: 100%;
            display: grid;
            grid-auto-flow: column;
            grid-template-columns: auto 110px;
            grid-template-rows: 1fr;
            @include prepare-border();
            border: $border;
            background-color: $c-secondary;
            color: $t-primary;
            

            .button {
       
                color: $t-primary;
                background-color: $c-secondary-dark;
                font-weight: map-get($map:$text-weight  , $key: "regular" );
                &:hover{
                    color: black;
                    background-color: $t-primary;
                }
            }
        }

    }

}

.dropdown-cell-requesttype{
    display: grid;
    grid-auto-flow: column;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    padding: $padding-elem;
    background-color: $c-secondary-dark;
    color: $t-primary;
    @include prepare-border();
    border: $border;
  

    @include pointer();

    &:hover {
        background-color: $t-primary;
        color: black;
        }

    .title {
        text-align: center;
        font-size: map-get($map:$text-size  , $key: "subhead" );
        font-weight: map-get($map:$text-weight  , $key: "regular" );
      
    }
}


.route-view {

    display:  grid;
    grid-auto-flow: column;
    grid-template-columns: auto  min-content 25px;
    @include prepare-border();
    border-bottom: $border;
    overflow: hidden;
    
    .route-holder  {
        overflow: hidden;
        height: 100%;

    }

    .sub-menu {
        background-color: $c-accent-alpha;
        position: relative;
        @include pointer();
       @include prepare-border();
       border-left: $border;   
        &:hover {
            background-color: $c-accent;
        }
        img {
            max-height: 100%;
            max-width: 100%;
            filter: invert(98%) sepia(8%) saturate(263%) hue-rotate(195deg) brightness(111%) contrast(80%);

        }
    } 


    .route {
        position: relative;
        display: grid;
        grid-auto-flow: column;
        grid-template-rows: 1fr;
        gap: $padding-elem;
        justify-content:start;
        color: $t-secondary;
        padding-left: $padding-elem;
        font-size: map-get($map:$text-size  , $key: "subhead" );
        font-weight: map-get($map:$text-weight  , $key: "regular" );

        .r-separator {
            color: $t-secondary;
        } 

    }

    .execute-button {
        background-color: $c-accent-alpha;
        color: $t-primary;
        @include prepare-border();
        @include pointer();
        padding-left:$padding-elem;
        padding-right: $padding-elem;

        font-size: map-get($map:$text-size  , $key: "callout" );
        font-weight: map-get($map:$text-weight  , $key: "medium" );
        display: grid;
        grid-template-rows: 1fr;
        grid-template-columns: 0px auto;
        grid-auto-flow: column;
    
        &:hover {
            background-color: $c-accent;
        }

        .spinner-holder {
            position: relative;
            //overflow: hidden;
        }
        .spinner-holder {
            opacity: 0;
        }
    }
    
    .execute-button.loading {
        grid-template-columns: 30px auto;
        padding-left:0px;

        .spinner-holder {
            opacity: 1;
        }

    }



}


.headers-view {



    table {
        width: 100%;
        border-collapse: collapse;
        border-style: hidden;
        color: $t-primary;
        border-bottom: $border;
        border-color: $primary-border-color2;
        text-align: left;

        th {
            font-size: map-get($map:$text-size  , $key: "subhead" );
            font-weight: map-get($map:$text-weight  , $key: "medium" );
            

        }

        td {
            font-size: map-get($map:$text-size  , $key: "subhead" );
            font-weight: map-get($map:$text-weight  , $key: "regular" );
        }

        td, th {
            width: 50%;
            height: 40px;
            @include prepare-border();
            border: $border;
            border-color: $primary-border-color2;
        }

        .checkbox-holder {
            position: relative;
            @include prepare-border();
            border-right: $border;
            border-color: $primary-border-color2;


            input {
        
            }
        }


        .key-holder{
            display: grid;
            grid-template-columns: 40px auto;
            grid-template-rows: 1fr;
            grid-auto-flow: column;
            height: 100%;
       
        }

        input.header-input {
            position: absolute;
            left: $padding-elem;
            right: $padding-elem;
            bottom: $padding-elem;
            top: $padding-elem;
            color: $t-secondary;
    
            background-color: transparent;

            font-size: map-get($map:$text-size  , $key: "subhead" );
            font-weight: map-get($map:$text-weight  , $key: "regular" );

            &:focus {
                @include prepare-border();
                color: $t-primary;
            }
        }

    }
}


.navbar-holder {

    color: $t-primary;
    display: grid;
    position: relative;
    display: grid;
    grid-auto-flow: column;
    grid-template-columns: min-content auto;
    grid-template-rows: 1fr;

    .title {
        font-size: map-get($map:$text-size  , $key: "title-2" );
        font-weight: map-get($map:$text-weight  , $key: "medium" );
        position: relative;
        padding-left: $padding-elem;
    }

    .beta {
        margin-left: $padding-elem;
        font-size: map-get($map:$text-size  , $key: "callout" );
        font-weight: map-get($map:$text-weight  , $key: "medium" );
        padding-left: 3px;
        padding-right: 3px;
        @include prepare-border();
        border : $border;
        border-radius:  $radius;
        background-color: $c-accent;
    }
    
    .buttons-holder {
        position: relative;
        justify-content: end;    
        display: grid;
        grid-template-columns: min-content min-content;
        grid-template-rows: 1fr;
        grid-auto-flow: column;
        gap: $padding-elem;

        .export {
            margin-right: $padding-elem;
        }

        .button-holder {

      



            .test-button {
                position: relative;
                background-color: $c-secondary-dark;
                padding: 3px;
                padding-left: 8px;
                padding-right: 8px;
                @include prepare-border();
                border-radius: $radius;
                font-size: map-get($map:$text-size  , $key: "callout" );
                font-weight: map-get($map:$text-weight  , $key: "medium" );

                &:hover {
                    @include pointer();
                    background-color: $t-primary;
                    color: $t-contrary;
                   // border: $border;
    
                }
            }

        }

    }

}